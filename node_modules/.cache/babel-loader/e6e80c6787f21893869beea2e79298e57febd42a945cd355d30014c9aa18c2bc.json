{"ast":null,"code":"var _jsxFileName = \"/Users/chudiercodes/Desktop/Revature/react/group-bank-app/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const USER_REGEX = /^[a-zA-Z][a-zA-Z0-9.-]{3,23}$/;\n  const PWD_REGEX = /^(?=.*[A-Za-z])(?=.*?[0-9]).{6, 24}$/;\n  const userRef = userRef();\n  const errorRef = errorRef();\n  const [user, setUser] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  //when the component loads \n  useEffect(() => {\n    useRef.current.focus();\n  }, []);\n\n  //validate the username\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n\n  //validate the password\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n\n  //error message\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd, matchPwd]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      ref: errorRef,\n      className: errMsg ? \"errmsg\" : \"offscreen\",\n      \"aria-live\": \"assertive\",\n      children: [\" \", errMsg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        ref: useRef,\n        autoComplete: \"off\",\n        onChange: e => setUser(e.target.value),\n        required: true,\n        \"aria-invalid\": validName ? \"false\" : \"true\"\n        // aria-decribedby=\"uidnote\"//the requirements needed\n        ,\n        onFocus: () => setUserFocus(true),\n        onBlur: () => setUserFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"uidnote\",\n        className: userFocus && user && !validName ? 'instructions' : 'offscreen',\n        children: [\"3 to 23 characters. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 46\n        }, this), \"Letters, numbers, underscores, hypens allowed.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"HC2qgYH/o2hZ/kcXcVb8KHvsKqk=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Register","USER_REGEX","PWD_REGEX","userRef","errorRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","result","test","console","log","match","e","target","value"],"sources":["/Users/chudiercodes/Desktop/Revature/react/group-bank-app/src/components/Register.js"],"sourcesContent":["import React from 'react'\n\nimport { useRef, useState, useEffect } from \"react\";\n\nconst Register = () => {\n    const USER_REGEX = /^[a-zA-Z][a-zA-Z0-9.-]{3,23}$/;\n    const PWD_REGEX = /^(?=.*[A-Za-z])(?=.*?[0-9]).{6, 24}$/;\n    \n    const userRef = userRef();\n    const errorRef = errorRef();\n\n    const [user, setUser] = useState('');\n    const [validName, setValidName] = useState(false);\n    const [userFocus, setUserFocus] = useState(false);\n\n    const [pwd, setPwd] = useState('');\n    const [validPwd, setValidPwd] = useState(false);\n    const [pwdFocus, setPwdFocus] = useState(false);    \n\n    const [matchPwd, setMatchPwd] = useState('');\n    const [validMatch, setValidMatch] = useState(false);\n    const [matchFocus, setMatchFocus] = useState(false); \n\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    //when the component loads \n    useEffect(() => {\n        useRef.current.focus();\n    }, []);\n\n    //validate the username\n    useEffect(() => {\n        const result = USER_REGEX.test(user);\n        console.log(result);\n        console.log(user);\n        setValidName(result);\n    }, [user]);\n\n    //validate the password\n    useEffect(() => {\n        const result = PWD_REGEX.test(pwd);\n        console.log(result);\n        console.log(pwd);\n        setValidPwd(result);\n        const match = pwd === matchPwd;\n        setValidMatch(match);\n    }, [pwd, matchPwd]);\n\n    //error message\n    useEffect(() => {\n        setErrMsg('');\n    }, [user, pwd, matchPwd]);\n    \n    return (\n        <section>\n            <p ref={errorRef} className={errMsg ? \"errmsg\" :\n                \"offscreen\"} aria-live=\"assertive\"> {errMsg}</p>\n            <h1>Register</h1>\n            <form>\n                <label htmlFor=\"username\">\n                    Username: \n                </label>\n                <input\n                    type=\"text\"\n                    id=\"username\"\n                    ref={useRef}\n                    autoComplete=\"off\"\n                    onChange={(e) => setUser(e.target.value)}\n                    required\n                    aria-invalid={validName ? \"false\" : \"true\"}\n                    // aria-decribedby=\"uidnote\"//the requirements needed\n                    onFocus={() => setUserFocus(true)}\n                    onBlur={() => setUserFocus(false)}\n                />\n\n                <p id='uidnote' className={userFocus && user && !validName ? 'instructions': 'offscreen'}>\n                    {/* <FontAwesomeIcon icon={faInfoCircle}/> */}\n                    3 to 23 characters. <br/>\n                    Must begin with a letter.<br/>\n                    Letters, numbers, underscores, hypens allowed.\n                </p>\n            </form>\n        </section>\n    )\n}\n\nexport default Register"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEpD,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAMC,UAAU,GAAG,+BAA+B;EAClD,MAAMC,SAAS,GAAG,sCAAsC;EAExD,MAAMC,OAAO,GAAGA,OAAO,EAAE;EACzB,MAAMC,QAAQ,GAAGA,QAAQ,EAAE;EAE3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM,CAACyB,MAAM,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACAC,SAAS,CAAC,MAAM;IACZF,MAAM,CAAC8B,OAAO,CAACC,KAAK,EAAE;EAC1B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA7B,SAAS,CAAC,MAAM;IACZ,MAAM8B,MAAM,GAAG5B,UAAU,CAAC6B,IAAI,CAACzB,IAAI,CAAC;IACpC0B,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnBE,OAAO,CAACC,GAAG,CAAC3B,IAAI,CAAC;IACjBG,YAAY,CAACqB,MAAM,CAAC;EACxB,CAAC,EAAE,CAACxB,IAAI,CAAC,CAAC;;EAEV;EACAN,SAAS,CAAC,MAAM;IACZ,MAAM8B,MAAM,GAAG3B,SAAS,CAAC4B,IAAI,CAACnB,GAAG,CAAC;IAClCoB,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnBE,OAAO,CAACC,GAAG,CAACrB,GAAG,CAAC;IAChBG,WAAW,CAACe,MAAM,CAAC;IACnB,MAAMI,KAAK,GAAGtB,GAAG,KAAKM,QAAQ;IAC9BG,aAAa,CAACa,KAAK,CAAC;EACxB,CAAC,EAAE,CAACtB,GAAG,EAAEM,QAAQ,CAAC,CAAC;;EAEnB;EACAlB,SAAS,CAAC,MAAM;IACZyB,SAAS,CAAC,EAAE,CAAC;EACjB,CAAC,EAAE,CAACnB,IAAI,EAAEM,GAAG,EAAEM,QAAQ,CAAC,CAAC;EAEzB,oBACI;IAAA,wBACI;MAAG,GAAG,EAAEb,QAAS;MAAC,SAAS,EAAEmB,MAAM,GAAG,QAAQ,GAC1C,WAAY;MAAC,aAAU,WAAW;MAAA,WAAC,GAAC,EAACA,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACpD;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eACjB;MAAA,wBACI;QAAO,OAAO,EAAC,UAAU;QAAA,UAAC;MAE1B;QAAA;QAAA;QAAA;MAAA,QAAQ,eACR;QACI,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,UAAU;QACb,GAAG,EAAE1B,MAAO;QACZ,YAAY,EAAC,KAAK;QAClB,QAAQ,EAAGqC,CAAC,IAAK5B,OAAO,CAAC4B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QACzC,QAAQ;QACR,gBAAc7B,SAAS,GAAG,OAAO,GAAG;QACpC;QAAA;QACA,OAAO,EAAE,MAAMG,YAAY,CAAC,IAAI,CAAE;QAClC,MAAM,EAAE,MAAMA,YAAY,CAAC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACpC,eAEF;QAAG,EAAE,EAAC,SAAS;QAAC,SAAS,EAAED,SAAS,IAAIJ,IAAI,IAAI,CAACE,SAAS,GAAG,cAAc,GAAE,WAAY;QAAA,WACvC,sBAC1B;UAAA;UAAA;UAAA;QAAA,QAAK,6BACA;UAAA;UAAA;UAAA;QAAA,QAAK,kDAElC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAElB,CAAC;AAAA,GAjFKP,QAAQ;AAAA,KAARA,QAAQ;AAmFd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}