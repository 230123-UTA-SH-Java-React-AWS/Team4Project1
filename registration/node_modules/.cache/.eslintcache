[{"C:\\Users\\user\\Documents\\Work\\Revature\\Java-Class\\Team4Project1\\registration\\src\\index.js":"1","C:\\Users\\user\\Documents\\Work\\Revature\\Java-Class\\Team4Project1\\registration\\src\\App.js":"2","C:\\Users\\user\\Documents\\Work\\Revature\\Java-Class\\Team4Project1\\registration\\src\\components\\Register.js":"3","C:\\Users\\user\\Documents\\Work\\Revature\\Java-Class\\Team4Project1\\registration\\src\\api\\axios.js":"4"},{"size":267,"mtime":1677033886727,"results":"5","hashOfConfig":"6"},{"size":164,"mtime":1677033886693,"results":"7","hashOfConfig":"6"},{"size":7359,"mtime":1677033886724,"results":"8","hashOfConfig":"6"},{"size":101,"mtime":1677033886697,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tyweq1",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Documents\\Work\\Revature\\Java-Class\\Team4Project1\\registration\\src\\index.js",[],[],"C:\\Users\\user\\Documents\\Work\\Revature\\Java-Class\\Team4Project1\\registration\\src\\App.js",[],[],"C:\\Users\\user\\Documents\\Work\\Revature\\Java-Class\\Team4Project1\\registration\\src\\components\\Register.js",["23","24","25","26","27","28"],[],"import React from 'react';\r\nimport axios from '../api/axios';\r\nimport { useRef, useState, useEffect } from 'react';\r\n\r\nimport { faCheck, faTimes, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst EMAIL_REGEX = /^[a-zA-Z0-9]+@+[a-zA-Z0-9]+.+[A-z]/;\r\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\n\r\n// const REGISTER_URL = '/register';\r\n\r\nconst Register = () => {\r\n\tconst userRef = useRef();\r\n\tconst errRef = useRef();\r\n\r\n\tconst [fname, setFname] = useState('');\r\n\r\n\tconst [lname, setLname] = useState('');\r\n\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [validEmail, setValidEmail] = useState(false);\r\n\tconst [emailFocus, setEmailFocus] = useState(false);\r\n\r\n\tconst [user, setUser] = useState('');\r\n\tconst [validName, setValidName] = useState(false);\r\n\tconst [userFocus, setUserFocus] = useState(false);\r\n\r\n\tconst [pwd, setPwd] = useState('');\r\n\tconst [validPwd, setValidPwd] = useState(false);\r\n\tconst [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n\tconst [matchPwd, setMatchPwd] = useState('');\r\n\tconst [validMatch, setValidMatch] = useState(false);\r\n\tconst [matchFocus, setMatchFocus] = useState(false);\r\n\r\n\tconst [errMsg, setErrMsg] = useState('');\r\n\tconst [success, setSuccess] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tuserRef.current.focus();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst result = EMAIL_REGEX.test(email);\r\n\t\tconsole.log(result);\r\n\t\tconsole.log(email);\r\n\t\tsetValidEmail(result);\r\n\t}, [email]);\r\n\r\n\t//validate the username\r\n\tuseEffect(() => {\r\n\t\tconst result = USER_REGEX.test(user);\r\n\t\tconsole.log(result);\r\n\t\tconsole.log(user);\r\n\t\tsetValidName(result);\r\n\t}, [user]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst result = PWD_REGEX.test(pwd);\r\n\t\tconsole.log(result);\r\n\t\tconsole.log(pwd);\r\n\t\tsetValidPwd(result);\r\n\t\tconst match = pwd === matchPwd;\r\n\t\tsetValidMatch(match);\r\n\t}, [pwd, matchPwd]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetErrMsg('');\r\n\t}, [user, pwd, matchPwd]);\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst data = {\r\n\t\t\temail: user,\r\n\t\t\tpassword: pwd,\r\n\t\t\tfname,\r\n\t\t\tlname\r\n\t\t}\r\n\r\n\t\tconst contentLength = (new TextEncoder().encode(JSON.stringify(data))).length;\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Content-Length': contentLength\r\n            }\r\n        };\r\n\t\taxios.post(`http://localhost:8000/register`, data, config)\r\n        .then( (res) => {\r\n            // dispatch(setUser(res.data));\r\n\t\t\tconsole.log(res.data);\r\n        })\r\n        .catch((err) => {\r\n            setErrMsg(\"Registration failed\")\r\n        })\r\n\t}\r\n\r\n\treturn (\r\n\t\t\r\n\t\t<section>\r\n\t\t\t<p ref={errRef} className={errMsg ? \"errmsg\" : \r\n\t\t\t\"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n\t\t\t<h1>Bank Registration</h1>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<label htmlFor='fname'>\r\n\t\t\t\t\tFirst Name:\r\n\t\t\t\t</label>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"fname\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={(e)=> setFname(e.target.value)}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\taria-describedby=\"firstname\"\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor='fname'>\r\n\t\t\t\t\tLast Name:\r\n\t\t\t\t</label>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"fname\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={(e)=> setLname(e.target.value)}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\taria-describedby=\"firstname\"\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<label htmlFor=\"email\">\r\n\t\t\t\t\tEmail:\r\n\t\t\t\t\t<span className={validEmail ? \"valid\" : \"hide\"}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faCheck} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className={validEmail || !email ? \"hide\" : \"invalid\"}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faTimes} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</label>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\tref={userRef}\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={(e)=> setEmail(e.target.value)}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\taria-invalid={validEmail ? \"false\" : \"true\"}\r\n\t\t\t\t\taria-describedby=\"emailnote\"\r\n\t\t\t\t\tonFocus={() => setUserFocus(true)}\r\n\t\t\t\t\tonBlur={() => setUserFocus(false)}\r\n\t\t\t\t/>\r\n\t\t\t\t<p id=\"emailnote\" className={userFocus && email && !validEmail ? \"instructions\" : \"offscreen\"}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faInfoCircle} />\r\n\t\t\t\t\tMust be correct email\r\n\t\t\t\t</p>\r\n\r\n\r\n\t\t\t\t<label htmlFor=\"username\">\r\n\t\t\t\t\tUsername:\r\n\t\t\t\t\t<span className={validName ? \"valid\" : \"hide\"}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faCheck} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className={validName || !user ? \"hide\" : \"invalid\"}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faTimes} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</label>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"username\"\r\n\t\t\t\t\tref={userRef}\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tonChange={(e)=> setUser(e.target.value)}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\taria-invalid={validName ? \"false\" : \"true\"}\r\n\t\t\t\t\taria-describedby=\"uidnote\"\r\n\t\t\t\t\tonFocus={() => setUserFocus(true)}\r\n\t\t\t\t\tonBlur={() => setUserFocus(false)}\r\n\t\t\t\t/>\r\n\t\t\t\t<p id=\"uidnote\" className={userFocus && user && !validName ? \"instructions\" : \"offscreen\"}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faInfoCircle} />\r\n\t\t\t\t\t4 to 24 characters.<br />\r\n\t\t\t\t\tMust begin with a letter.<br />\r\n\t\t\t\t\tLetters, numbers, underscores, hyphens allowed.\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<label htmlFor=\"password\">\r\n\t\t\t\t\tPassword:\r\n\t\t\t\t\t<span className={validPwd ? \"valid\" : \"hide\"}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faCheck} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className={validPwd || !pwd ? \"hide\" : \"invalid\"}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faTimes} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</label>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\tonChange={(e)=> setPwd(e.target.value)}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\taria-invalid={validPwd ? \"false\" : \"true\"}\r\n\t\t\t\t\taria-describedby=\"pwdnote\"\r\n\t\t\t\t\tonFocus={() => setPwdFocus(true)}\r\n\t\t\t\t\tonBlur={() => setPwdFocus(false)}\r\n\t\t\t\t/>\r\n\t\t\t\t<p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faInfoCircle} />\r\n\t\t\t\t\t8 to 24 characters.<br/>\r\n\t\t\t\t\tMust include uppercase and lowercase letters, a number and a special character.<br/>\r\n\t\t\t\t\tAllowed special character: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<label htmlFor=\"confirm_pwd\">\r\n\t\t\t\t\tConfirm Password:\r\n\t\t\t\t\t<span className={validMatch && matchPwd ? \"valid\": \"hide\"}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faCheck} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className={validMatch || !matchPwd ? \"hide\": \"invalid\"}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faTimes} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</label>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tid=\"confirm_pwd\"\r\n\t\t\t\t\tonChange={(e)=> setMatchPwd(e.target.value)}\r\n\t\t\t\t\tvalue={matchPwd}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\taria-invalid={validMatch ? \"false\" : \"true\"}\r\n\t\t\t\t\taria-describedby=\"confirmnote\"\r\n\t\t\t\t\tonFocus={() => setMatchFocus(true)}\r\n\t\t\t\t\tonBlur={() => setMatchFocus(false)}\r\n\t\t\t\t/>\r\n\t\t\t\t<p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faInfoCircle} />\r\n\t\t\t\t\tMust re-enter the password.\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<button disabled={fname == undefined || !validName || !validPwd || !validMatch ? true : false}> Sign Up </button>\r\n\t\t\t</form>\r\n\t\t\t<p>\r\n\t\t\t\tAlready registered? <br/>\r\n\t\t\t\t<span className=\"line\">\r\n\t\t\t\t\t{/* put react router link here */}\r\n\t\t\t\t\t<a href=\"#\">Sign In</a>\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t</section>\r\n\t\t\r\n\t)\r\n}\r\n\r\nexport default Register","C:\\Users\\user\\Documents\\Work\\Revature\\Java-Class\\Team4Project1\\registration\\src\\api\\axios.js",[],[],{"ruleId":"29","severity":1,"message":"30","line":24,"column":9,"nodeType":"31","messageId":"32","endLine":24,"endColumn":19},{"ruleId":"29","severity":1,"message":"33","line":24,"column":21,"nodeType":"31","messageId":"32","endLine":24,"endColumn":34},{"ruleId":"29","severity":1,"message":"34","line":39,"column":9,"nodeType":"31","messageId":"32","endLine":39,"endColumn":16},{"ruleId":"29","severity":1,"message":"35","line":39,"column":18,"nodeType":"31","messageId":"32","endLine":39,"endColumn":28},{"ruleId":"36","severity":1,"message":"37","line":237,"column":29,"nodeType":"38","messageId":"39","endLine":237,"endColumn":31},{"ruleId":"40","severity":1,"message":"41","line":243,"column":6,"nodeType":"42","endLine":243,"endColumn":18},"no-unused-vars","'emailFocus' is assigned a value but never used.","Identifier","unusedVar","'setEmailFocus' is assigned a value but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]